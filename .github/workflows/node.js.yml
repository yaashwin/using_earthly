name: CI/CD Pipeline with Earthly and DockerHub
on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch:
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/earthly_image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install Earthly
        run: |
          sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'
          earthly --version
      - name: Generate build metadata
        id: meta
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Build application with Earthly
        run: earthly +build
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push Docker image
        if: github.event_name != 'pull_request'
        run: |
          earthly --push +docker --tag=latest --tag=${{ steps.meta.outputs.sha_short }} --tag=${{ steps.meta.outputs.date }}
  # update-manifest:
  #   needs: build-and-publish
  #   runs-on: ubuntu-latest
  #   if: github.event_name != 'pull_request'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Setup Git
  #       run: |
  #         git config user.name "GitHub Actions"
  #         git config user.email "actions@github.com"
  #     - name: Get image tag
  #       id: meta
  #       run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
  #     - name: Update image tag in kustomization
  #       run: |
  #         cd k8s
  #         sed -i "s|image: ${{ secrets.DOCKERHUB_USERNAME }}/node-app:.*|image: ${{ secrets.DOCKERHUB_USERNAME }}/node-app:${{ steps.meta.outputs.sha_short }} # {\"$imagepolicy\": \"flux-system:node-app\"}|" deployment.yaml
  #     - name: Commit and push changes
  #       run: |
  #         git add k8s/deployment.yaml
  #         git commit -m "Update image tag to ${{ steps.meta.outputs.sha_short }}"
  #         git push
